server:
  port: 8081
spring:
  application:
    name: gateway-server
  # Redis 配置
  data:
    redis:
      host: 123.57.243.203
      port: 6379
      password: Asdf1234.
  cloud:
    sentinel:
      filter:
        enabled: true
      transport:
        dashboard: 127.0.0.1:8080
#      datasource:
#         ds1.nacos:
#           server-addr: 123.57.243.203:8848
#           rule-type: gw_flow
#           data-id: gw-flow
#         ds2.nacos:
#           server-addr: 123.57.243.203:8848
#           rule-type: gw_api_group
#           data-id: gw_api_group
      datasource:
        gw-flow:
          nacos:
            server-addr: 123.57.243.203:8848
            data-id: gw-flow
            group-id: DEFAULT_GROUP
            data-type: json
            rule-type: gw_flow
        gw-api-group:
          nacos:
            server-addr: 123.57.243.203:8848
            data-id: gw-api-group
            group-id: DEFAULT_GROUP
            data-type: json
            rule-type: gw_api_group

#        ds1.file:
#          file: classpath:gw-flow.json #网关+Api分组限流
#          rule-type: gw_flow
#        ds2.file:
#          file: classpath:api-group.json
#          rule-type: gw_api_group

    nacos:
      discovery:
        server-addr: 123.57.243.203:8848
        username: nacos
        password: nacos
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
        - id: admin-service-router
          uri: lb://admin-service
          predicates:
            - Path=/admin/**
        - id: test-router
          uri: https://aliyun.com
          predicates:
            - Path=/product
        - id: test-filter-router
          uri: https://httpbin.org/anything
          predicates:
            - Path=/test/**
            #网关完成两种维度的限流
            #网关维度+Api分组

# 不需要 token 访问的 URL 配置
no:
  token:
    access:
      urls: /admin/login,/admin/validate/code,/oauth2/token,/product,/test/public

